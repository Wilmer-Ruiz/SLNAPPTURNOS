@page "/Solicitar"

@inject IgrabarClienteServicio grabarClienteServicio
@inject IlistaServicio ListaServicio
@inject NavigationManager NavigationManager

<div class="text-center">
    <h5>Los campos señalados con asterico <font color="red">(*)</font> son obligatorios</h5>
</div>



<div class="card">
    <div class="card-body">
        <div class="container">
            <fieldset class="border p-2">
                <legend class="float-none w-auto p-2">
                    <font color="#dc8f35" ; size="2">
                        <b>Ingrese los datos solicitados a continuación para agendar su cita </b>
                    </font>
                </legend>

                <div class="row">
                    <div class="col-md-12">

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Tipo de Persona</FieldLabel>

                            <select @bind="@Models_Clientes_Turno.STRCODIGOTIPOPERSONA" class="custom-select" title="Seleccion es requerida" required>
                                <option value="Select">Selecione un tipo de Persona</option>

                                @if (ModelsTipoPersonas != null && ModelsTipoPersonas.Count > 0)
                                {

                                    @foreach (var dato in ModelsTipoPersonas)
                                    {
                                        <option value="@dato.STRCODIGO"> @dato.STRTIPOPERSONA</option>
                                    }
                                }
                            </select>

                            @*<ValidationMessage For="@(() => Models_Clientes_Turno.STRCODIGOTIPOPERSONA)" />*@

                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Tipo de Documento</FieldLabel>

                            <select @bind="@Models_Clientes_Turno.STRCODIGOTIPODOCUMENTO" class="custom-select" title="Seleccion es requerida" required>
                                <option value="Select">Selecione un tipo de Documento</option>

                                @if (ModelsTipoDocumentos != null && ModelsTipoDocumentos.Count > 0)
                                {

                                    @foreach (var dato in ModelsTipoDocumentos)
                                    {
                                        <option value="@dato.STRCODIGO"> @dato.STRTIPODOCUMENTO</option>
                                    }
                                }

                            </select>
                            @*<ValidationMessage For="@(() => Models_Clientes_Turno.STRCODIGOTIPODOCUMENTO)" />*@

                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Numero de Documento</FieldLabel>
                            <RadzenTextBox @bind-Value="@Models_Clientes_Turno.STRCEDULA" Style="width: 100%" Placeholder="Digite numero de identificacion" MaxLength="30" class="form-control" type="number" required />
                            @*  <ValidationMessage For="@(() => Models_Clientes_Turno.STRCEDULA)" />*@
                            @* <RadzenTextBox class="form-control" @bind-Value="@contact.FIRTSNAME">
                            </RadzenTextBox>*@
                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Nombres</FieldLabel>
                            <RadzenTextBox @bind-Value="@Models_Clientes_Turno.STRNOMBRES" Placeholder="Digite sus nombres" MaxLength="200" class="form-control" required />
                            @*<ValidationMessage For="@(() => Models_Clientes_Turno.STRNOMBRES)" />*@
                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Apellidos</FieldLabel>
                            <RadzenTextBox @bind-Value="@Models_Clientes_Turno.STRAPELLIDOS" Placeholder="Digite los apellidos" MaxLength="200" class="form-control" required />
                            @*<ValidationMessage For="@(() => Models_Clientes_Turno.STRAPELLIDOS)" />*@
                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Telefono Fijo</FieldLabel>
                            <RadzenTextBox @bind-Value="@Models_Clientes_Turno.STRTELEFONOFIJO" Placeholder="Digite Telefono Fijo" MaxLength="30" class="form-control" type="number" required />
                            @* <ValidationMessage For="@(() => Models_Clientes_Turno.STRTELEFONOFIJO)" />*@
                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Telefono Celular</FieldLabel>
                            <RadzenTextBox @bind-Value="@Models_Clientes_Turno.STRTELEFONOCELULAR" Placeholder="Digite Telefono Celular" MaxLength="30" class="form-control" type="number" required />
                            @*<ValidationMessage For="@(() => Models_Clientes_Turno.STRTELEFONOCELULAR)" />*@
                        </div>

                        <div class="col-md-12 mb-3">
                            <FieldLabel><font color="red">(*)</font>Correo Electronico</FieldLabel>
                            <RadzenTextBox @bind-Value="@Models_Clientes_Turno.STREMAIL" type="email" Placeholder="Digite Correo Electronico" MaxLength="200" class="form-control" required />
                            @* <ValidationMessage For="@(() => Models_Clientes_Turno.STREMAIL)" />*@
                        </div>

                        <div class="col-md-12 mb-3">
                            <Check TValue="bool" Checked="@rememberMe" CheckedChanged="@Activacion">
                                Consciento que mis datos personales sean transferidos en los términos que señalan el presente aviso de privacidad
                            </Check>
                        </div>

                        <div class="row justify-content-center">
                            <div class="col-md-5 mb-3">
                                @*<button type="submit" class="btn btn-success">Submit</button>*@
                                <RadzenButton Click="@(args => DropDownChanged())" data-toggle="tooltip" title="Retorna a la pagina anterior" class="btn btn-primary" Style="background:orange" Text="Retornar" ButtonStyle="ButtonStyle.Primary" />
                            </div>
                        </div>

                    </div>
                </div>

                @*
                <div class="col-md-4">
                </div>*@

                @*<RadzenTextBox class="form-control" @bind-Value="@contact.PHONE">
                </RadzenTextBox>*@

                @*<RadzenDropDown TValue="string" Data=@(customers.Select(c => c.CompanyName).Distinct()) Change="@OnChange" />*@

            </fieldset>
        </div>
    </div>
</div>

<Modal @ref="modalRef">
    <ModalContent Size="ModalSize.Large" Centered="true" Scrollable="true">
        <ModalHeader>
            <ModalTitle>
                HABEAS DATA
            </ModalTitle>
        </ModalHeader>
        <ModalBody>
            <br />
            <p>
                Empresas Varias de Medellin S.A.S identificado con NIT  890.905.055-9 Ubicada en la Calle 30 #55-198 Medellín, Antioquia, Colombia.

                El cual tiene dispuestos los siguientes canales de comunicación:

                - Línea de atención al cliente en Medellin:  (+604) 444 56 36
                - Correo electrónico: contacto@emvarias.com.co
                - Oficina: Calle 30 #55-198 Medellín, Antioquia, Colombia

                En el horario de lunes a viernes (excepto días festivos)  a partir de las 7:00 am hasta las 5:00 pm.
                Tiene bajo su administración y tratamiento datos personales  privados por relaciones comerciales y administrativas.
                El cual consiste en recolectar, almacenar, depurar, usar, analizar, actualizar y cruzar la información proporcionada por los titulares y facilitar
                la información a nuestro proveedor para el servicio exclusivo de custodia de la información.

                La información suministrada por usted también podrá ser utilizada para que se le envíe como cliente, proveedor o contratista invitaciones a eventos, información de lanzamiento de productos
                y demás actualizaciones comerciales, como también temas contables y financieros.
                De acuerdo a lo establecido en el Art 8 de la Ley 1581  de 2012 se le informan sus derechos como titular:

                - Conocer, actualizar y rectificar los datos personales suministrados.
                - Solicitar prueba de esta autorización.
                - Solicitar información del uso que le ha dado a los datos personales.
                - Presentar quejas ante la Superintendencia de Industria y Comercio por el uso inadecuado de los datos personales.
                - Revocar la autorización y/o solicitar la supresión del dato cuando en el Tratamiento no se respeten los principios, derechos y garantías constitucionales y legales.
                - Acceder en forma gratuita a los datos personales que se hayan suministrado para tratamiento.

                Al proporcionar sus datos personales por escrito, a través de una solicitud, formato en papel, formato digital, correo electrónico, o cualquier otro documento, acepta y autoriza  a EMPRESAS VARIAS DE MEDELLIN S.A.S
                a realizar la administración y tratamiento de forma automatizada de los mismos.
                Para acceder a  la política de tratamiento de datos  personales y demás procedimientos puede ingresar a  la página  web https://www.emvarias.com.co/emvarias.

            </p>
        </ModalBody>
        <ModalFooter>
            @*<button type="submit" class="btn btn-success">Submit</button>*@
            <Button Color="Color.Primary" Clicked="@Aceptar">Aceptar Habeas Data</Button>
            <Button Color="Color.Secondary" Clicked="@NoAceptar">No Aceptar Habeas Data</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalvalidar">
    <ModalContent Size="ModalSize.Large" Centered="true" Scrollable="true">
        <ModalHeader>
            <ModalTitle>
                Validacion Campos
            </ModalTitle>
        </ModalHeader>
        <ModalBody>
            <br />
            <p>
                Los campos señalados con asterico <font color="red">(*)</font> son obligatorios y el campo email debe ser valido.
            </p>
        </ModalBody>
        <ModalFooter>
            
            <Button Color="Color.Secondary" Clicked="@NoAceptar">Cerrar Ventana</Button>
        </ModalFooter>
    </ModalContent>
</Modal>





@code {


    private TABLE_CLIENTES_TURNOS? Models_Clientes_Turno;

    List<TipoPersona>? ModelsTipoPersonas;
    List<TipoDocumento>? ModelsTipoDocumentos;

    

    bool rememberMe;
    bool Bandera = false;

    private Modal? modalRef = null!;
    private Modal? modalvalidar = null!;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();

            Models_Clientes_Turno = new Models_Clientes_Turnos();

            ModelsTipoPersonas = (await ListaServicio.GetAllTipoPersona()).ToList();
            ModelsTipoDocumentos = (await ListaServicio.GetAllTipoDocumento()).ToList();

            //ModelsTipoPersonas = await ListaServicio.GetAllTipoPersona();
        }
        catch (Exception ex)
        {

            throw;
        }
       
    }

    private void Activacion(bool value)
    {
        String sFormato;
        sFormato = "\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*";

        rememberMe = value;

        if (value == true)
        {
            Bandera = false;

            if (Models_Clientes_Turno.STRCEDULA == string.Empty || Models_Clientes_Turno.STRCEDULA == null)
            {

                Bandera = true;
                modalvalidar.Show();
            }

            if (Models_Clientes_Turno.STRNOMBRES == string.Empty || Models_Clientes_Turno.STRNOMBRES == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }

            if (Models_Clientes_Turno.STRAPELLIDOS == string.Empty || Models_Clientes_Turno.STRAPELLIDOS == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }

            if (Models_Clientes_Turno.STREMAIL == string.Empty || Models_Clientes_Turno.STREMAIL == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }

            if (Models_Clientes_Turno.STRTELEFONOCELULAR == string.Empty || Models_Clientes_Turno.STRTELEFONOCELULAR == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }

            if (Models_Clientes_Turno.STRTELEFONOFIJO == string.Empty || Models_Clientes_Turno.STRTELEFONOFIJO == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }

            if (Models_Clientes_Turno.STRCODIGOTIPOPERSONA == string.Empty || Models_Clientes_Turno.STRTELEFONOFIJO == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }
            else
            {
                if (Convert.ToUInt64(Models_Clientes_Turno.STRCODIGOTIPOPERSONA) <= 0)
                {
                    Bandera = true;
                    modalvalidar.Show();
                }
            }

            if (Models_Clientes_Turno.STRCODIGOTIPODOCUMENTO == string.Empty || Models_Clientes_Turno.STRCODIGOTIPODOCUMENTO == null)
            {
                Bandera = true;
                modalvalidar.Show();
            }
            else
            {
                if (Convert.ToUInt64(Models_Clientes_Turno.STRCODIGOTIPODOCUMENTO) <= 0)
                {
                    Bandera = true;
                    modalvalidar.Show();
                }
            }

            if (Regex.IsMatch(Models_Clientes_Turno.STREMAIL, sFormato) == false)
            {
                Bandera = true;
                modalvalidar.Show();
            }

            if (Bandera == false)
            {
                modalRef.Show();
            }

        }
    }

    protected async Task Aceptar()
    {    

        await grabarClienteServicio.InsertClientes(Models_Clientes_Turno);

        NavigationManager.NavigateTo($"/Calendario/{Models_Clientes_Turno.STRCEDULA}/{Models_Clientes_Turno.STREMAIL}");
    }


    private void DropDownChanged()
    {
        NavigationManager.NavigateTo("/");
    }


    private void NoAceptar()
    {

        Bandera = false;
        modalvalidar.Hide();

        rememberMe = false;
        modalRef.Hide();
    }


}
